// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  phone       String?
  department  String
  location    String?
  status      String   @default("Active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reviews     PerformanceReview[]
}

model PerformanceReview {
  id          String   @id @default(cuid())
  employeeId  String
  employee    Employee @relation(fields: [employeeId], references: [id])
  status      String   @default("Pending")
  
  // Basic Information
  position    String?
  department  String?
  reviewType  String?  // For Regular, For Probationary, Others
  dateHired   DateTime?
  immediateSupervisor String?
  performanceCoverage String?
  
  // Scores
  jobKnowledge Float?
  qualityOfWork Float?
  promptnessOfWork Float?
  qualityMeetsStandards Float?
  qualityTimeliness Float?
  qualityWorkOutputVolume Float?
  qualityConsistency Float?
  qualityJobTargets Float?
  adaptabilityOpenness Float?
  adaptabilityFlexibility Float?
  adaptabilityResilience Float?
  activeParticipationScore Float?
  positiveTeamCultureScore Float?
  effectiveCommunicationScore Float?
  consistentAttendanceScore Float?
  punctualityScore Float?
  followsThroughScore Float?
  reliableHandlingScore Float?
  ethicalFollowsPoliciesScore Float?
  ethicalProfessionalismScore Float?
  ethicalAccountabilityScore Float?
  ethicalRespectScore Float?
  customerListeningScore Float?
  customerProblemSolvingScore Float?
  customerProductKnowledgeScore Float?
  customerProfessionalAttitudeScore Float?
  customerTimelyResolutionScore Float?
  
  // Comments
  jobKnowledgeComments String?
  promptnessofworkComments String?
  qualityofworkComments String?
  qualityMeetsStandardsComments String?
  qualityTimelinessComments String?
  qualityWorkOutputVolumeComments String?
  qualityConsistencyComments String?
  qualityJobTargetsComments String?
  adaptabilityOpennessComments String?
  adaptabilityFlexibilityComments String?
  adaptabilityResilienceComments String?
  activeParticipationExplanation String?
  positiveTeamCultureExplanation String?
  effectiveCommunicationExplanation String?
  consistentAttendanceExplanation String?
  punctualityExplanation String?
  followsThroughExplanation String?
  reliableHandlingExplanation String?
  ethicalFollowsPoliciesExplanation String?
  ethicalProfessionalismExplanation String?
  ethicalAccountabilityExplanation String?
  ethicalRespectExplanation String?
  customerListeningExplanation String?
  customerProblemSolvingExplanation String?
  customerProductKnowledgeExplanation String?
  customerProfessionalAttitudeExplanation String?
  customerTimelyResolutionExplanation String?
  
  // Final Results
  finalScore Float?
  finalRating String?
  finalPercentage Float?
  areasForImprovement String?
  additionalComments String?
  
  // Metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 